"""Modify user

Revision ID: 337f1f047397
Revises: 67a7d47cc1ff
Create Date: 2023-03-08 15:53:41.090516

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '337f1f047397'
down_revision = '67a7d47cc1ff'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_table('spatial_ref_sys')
    with op.batch_alter_table('caregiverMemory', schema=None) as batch_op:
        batch_op.alter_column('memory_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('caregiver_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('full_name', sa.String(length=50), nullable=True))
        batch_op.alter_column('user_type',
               existing_type=postgresql.ENUM('PATIENT', 'CAREGIVER', name='eusertype'),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.drop_index('idx_user_location')
        batch_op.drop_constraint('user_username_key', type_='unique')
        batch_op.drop_column('username')
        batch_op.drop_column('lastname')
        batch_op.drop_column('firstname')
        batch_op.drop_column('location')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('firstname', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('lastname', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('username', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
        batch_op.create_unique_constraint('user_username_key', ['username'])
        batch_op.create_index('idx_user_location', ['location'], unique=False)
        batch_op.alter_column('user_type',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('PATIENT', 'CAREGIVER', name='eusertype'),
               existing_nullable=True)
        batch_op.drop_column('full_name')

    with op.batch_alter_table('caregiverMemory', schema=None) as batch_op:
        batch_op.alter_column('caregiver_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('memory_id',
               existing_type=sa.INTEGER(),
               nullable=True)

#     op.create_table('spatial_ref_sys',
#     sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
#     sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
#     sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
#     sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
#     sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
#     sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
#     sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
#     )
    # ### end Alembic commands ###
